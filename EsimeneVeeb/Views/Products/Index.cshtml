@model IEnumerable<EsimeneVeeb.Models.Product>
@using EsimeneVeeb.Helpers

@{
    //Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
    <p>
        @Html.ActionButton("Create New", "Create", "Products", htmlAttributes: new { @class = "btn btn-success" })
        @*
        @Html.ActionLink("Create New", "Create", "Products", null, htmlAttributes: new { @class = "btn btn-success" })
        *@
    </p>
    <table class="table">
        <tr>
            <th>
                
                @Html.ActionButton(Html.NameFor(model => model.ProductName) + (ViewBag.Sort == "PN" ? " &uarr;" : ViewBag.Sort == "PND" ? " &darr;" : "") , "Index", "Products", new { sort = ViewBag.Sort == "PN" ? "PND" : "PN" }, new { @class = "btn btn-light"}) 
                @*@Html.DisplayNameFor(model => model.ProductName)*@
            </th>
            <th>
                
                @Html.DisplayNameFor(model => model.SupplierID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.QuantityPerUnit)
            </th>
            <th>
                @Html.ActionButton(Html.NameFor(model => model.UnitPrice) + (ViewBag.Sort == "UP" ? "&nbsp;&uarr;" : ViewBag.Sort == "UPD" ? "&nbsp;&darr;" : ""), "Index", "Products", new { sort = ViewBag.Sort == "UP" ? "UPD" : "UP" }, new { @class = "btn btn-light" })

                @*@Html.DisplayNameFor(model => model.UnitPrice)*@
            </th>
            <th>
                <div class="btn btn-light">
                    @Html.NameFor(model => model.UnitsInStock)
                </div>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitsOnOrder)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.ReorderLevel)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Discontinued)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category.CategoryName)
            </th>
            <th></th>
        </tr>
    
    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SupplierID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QuantityPerUnit)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitsInStock)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitsOnOrder)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.ReorderLevel)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Discontinued)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.CategoryName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.ProductID }, new { @class = "btn btn-light btn-sm"}) |
                @Html.ActionLink("Details", "Details", new { id=item.ProductID }, new { @class = "btn btn-light btn-sm" }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.ProductID }, new { @class = "btn btn-light btn-sm" })
            </td>
        </tr>
    }
    
    </table>
</body>
</html>
